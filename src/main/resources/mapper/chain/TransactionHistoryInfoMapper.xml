<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hpb.bc.chain.mapper.TransactionHistoryInfoMapper">
  <resultMap id="BaseResultMap" type="com.hpb.bc.entity.TransactionHistoryInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="transaction_hash" jdbcType="VARCHAR" property="transactionHash" />
    <result column="from_account" jdbcType="VARCHAR" property="fromAccount" />
    <result column="to_account" jdbcType="VARCHAR" property="toAccount" />
    <result column="nonce" jdbcType="BIGINT" property="nonce" />
    <result column="t_value" jdbcType="VARCHAR" property="tValue" />
    <result column="gas" jdbcType="VARCHAR" property="gas" />
    <result column="gas_price" jdbcType="VARCHAR" property="gasPrice" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="block_hash" jdbcType="VARCHAR" property="blockHash" />
    <result column="block_number" jdbcType="BIGINT" property="blockNumber" />
    <result column="transaction_index" jdbcType="BIGINT" property="transactionIndex" />
    <result column="t_timestap" jdbcType="BIGINT" property="tTimestap" />
    <result column="gas_used" jdbcType="VARCHAR" property="gasUsed" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hpb.bc.entity.TransactionHistoryInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="t_input" jdbcType="LONGVARCHAR" property="tInput" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    transaction_hash, from_account, to_account, nonce, t_value, gas, gas_price, status, 
    block_hash, block_number, transaction_index, t_timestap, gas_used, remark
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    t_input
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hpb.bc.example.TransactionHistoryInfoExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from transaction_history_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hpb.bc.example.TransactionHistoryInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from transaction_history_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from transaction_history_info
    where transaction_hash = #{transactionHash,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from transaction_history_info
    where transaction_hash = #{transactionHash,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hpb.bc.example.TransactionHistoryInfoExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from transaction_history_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hpb.bc.entity.TransactionHistoryInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into transaction_history_info (transaction_hash, from_account, to_account, 
      nonce, t_value, gas, 
      gas_price, status, block_hash, 
      block_number, transaction_index, t_timestap, 
      gas_used, remark, t_input
      )
    values (#{transactionHash,jdbcType=VARCHAR}, #{fromAccount,jdbcType=VARCHAR}, #{toAccount,jdbcType=VARCHAR}, 
      #{nonce,jdbcType=BIGINT}, #{tValue,jdbcType=VARCHAR}, #{gas,jdbcType=VARCHAR}, 
      #{gasPrice,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{blockHash,jdbcType=VARCHAR}, 
      #{blockNumber,jdbcType=BIGINT}, #{transactionIndex,jdbcType=BIGINT}, #{tTimestap,jdbcType=BIGINT}, 
      #{gasUsed,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{tInput,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hpb.bc.entity.TransactionHistoryInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into transaction_history_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transactionHash != null">
        transaction_hash,
      </if>
      <if test="fromAccount != null">
        from_account,
      </if>
      <if test="toAccount != null">
        to_account,
      </if>
      <if test="nonce != null">
        nonce,
      </if>
      <if test="tValue != null">
        t_value,
      </if>
      <if test="gas != null">
        gas,
      </if>
      <if test="gasPrice != null">
        gas_price,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="blockHash != null">
        block_hash,
      </if>
      <if test="blockNumber != null">
        block_number,
      </if>
      <if test="transactionIndex != null">
        transaction_index,
      </if>
      <if test="tTimestap != null">
        t_timestap,
      </if>
      <if test="gasUsed != null">
        gas_used,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="tInput != null">
        t_input,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transactionHash != null">
        #{transactionHash,jdbcType=VARCHAR},
      </if>
      <if test="fromAccount != null">
        #{fromAccount,jdbcType=VARCHAR},
      </if>
      <if test="toAccount != null">
        #{toAccount,jdbcType=VARCHAR},
      </if>
      <if test="nonce != null">
        #{nonce,jdbcType=BIGINT},
      </if>
      <if test="tValue != null">
        #{tValue,jdbcType=VARCHAR},
      </if>
      <if test="gas != null">
        #{gas,jdbcType=VARCHAR},
      </if>
      <if test="gasPrice != null">
        #{gasPrice,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="blockHash != null">
        #{blockHash,jdbcType=VARCHAR},
      </if>
      <if test="blockNumber != null">
        #{blockNumber,jdbcType=BIGINT},
      </if>
      <if test="transactionIndex != null">
        #{transactionIndex,jdbcType=BIGINT},
      </if>
      <if test="tTimestap != null">
        #{tTimestap,jdbcType=BIGINT},
      </if>
      <if test="gasUsed != null">
        #{gasUsed,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="tInput != null">
        #{tInput,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hpb.bc.example.TransactionHistoryInfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from transaction_history_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update transaction_history_info
    <set>
      <if test="record.transactionHash != null">
        transaction_hash = #{record.transactionHash,jdbcType=VARCHAR},
      </if>
      <if test="record.fromAccount != null">
        from_account = #{record.fromAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.toAccount != null">
        to_account = #{record.toAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.nonce != null">
        nonce = #{record.nonce,jdbcType=BIGINT},
      </if>
      <if test="record.tValue != null">
        t_value = #{record.tValue,jdbcType=VARCHAR},
      </if>
      <if test="record.gas != null">
        gas = #{record.gas,jdbcType=VARCHAR},
      </if>
      <if test="record.gasPrice != null">
        gas_price = #{record.gasPrice,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.blockHash != null">
        block_hash = #{record.blockHash,jdbcType=VARCHAR},
      </if>
      <if test="record.blockNumber != null">
        block_number = #{record.blockNumber,jdbcType=BIGINT},
      </if>
      <if test="record.transactionIndex != null">
        transaction_index = #{record.transactionIndex,jdbcType=BIGINT},
      </if>
      <if test="record.tTimestap != null">
        t_timestap = #{record.tTimestap,jdbcType=BIGINT},
      </if>
      <if test="record.gasUsed != null">
        gas_used = #{record.gasUsed,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.tInput != null">
        t_input = #{record.tInput,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update transaction_history_info
    set transaction_hash = #{record.transactionHash,jdbcType=VARCHAR},
      from_account = #{record.fromAccount,jdbcType=VARCHAR},
      to_account = #{record.toAccount,jdbcType=VARCHAR},
      nonce = #{record.nonce,jdbcType=BIGINT},
      t_value = #{record.tValue,jdbcType=VARCHAR},
      gas = #{record.gas,jdbcType=VARCHAR},
      gas_price = #{record.gasPrice,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      block_hash = #{record.blockHash,jdbcType=VARCHAR},
      block_number = #{record.blockNumber,jdbcType=BIGINT},
      transaction_index = #{record.transactionIndex,jdbcType=BIGINT},
      t_timestap = #{record.tTimestap,jdbcType=BIGINT},
      gas_used = #{record.gasUsed,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      t_input = #{record.tInput,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update transaction_history_info
    set transaction_hash = #{record.transactionHash,jdbcType=VARCHAR},
      from_account = #{record.fromAccount,jdbcType=VARCHAR},
      to_account = #{record.toAccount,jdbcType=VARCHAR},
      nonce = #{record.nonce,jdbcType=BIGINT},
      t_value = #{record.tValue,jdbcType=VARCHAR},
      gas = #{record.gas,jdbcType=VARCHAR},
      gas_price = #{record.gasPrice,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      block_hash = #{record.blockHash,jdbcType=VARCHAR},
      block_number = #{record.blockNumber,jdbcType=BIGINT},
      transaction_index = #{record.transactionIndex,jdbcType=BIGINT},
      t_timestap = #{record.tTimestap,jdbcType=BIGINT},
      gas_used = #{record.gasUsed,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hpb.bc.entity.TransactionHistoryInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update transaction_history_info
    <set>
      <if test="fromAccount != null">
        from_account = #{fromAccount,jdbcType=VARCHAR},
      </if>
      <if test="toAccount != null">
        to_account = #{toAccount,jdbcType=VARCHAR},
      </if>
      <if test="nonce != null">
        nonce = #{nonce,jdbcType=BIGINT},
      </if>
      <if test="tValue != null">
        t_value = #{tValue,jdbcType=VARCHAR},
      </if>
      <if test="gas != null">
        gas = #{gas,jdbcType=VARCHAR},
      </if>
      <if test="gasPrice != null">
        gas_price = #{gasPrice,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="blockHash != null">
        block_hash = #{blockHash,jdbcType=VARCHAR},
      </if>
      <if test="blockNumber != null">
        block_number = #{blockNumber,jdbcType=BIGINT},
      </if>
      <if test="transactionIndex != null">
        transaction_index = #{transactionIndex,jdbcType=BIGINT},
      </if>
      <if test="tTimestap != null">
        t_timestap = #{tTimestap,jdbcType=BIGINT},
      </if>
      <if test="gasUsed != null">
        gas_used = #{gasUsed,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="tInput != null">
        t_input = #{tInput,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where transaction_hash = #{transactionHash,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hpb.bc.entity.TransactionHistoryInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update transaction_history_info
    set from_account = #{fromAccount,jdbcType=VARCHAR},
      to_account = #{toAccount,jdbcType=VARCHAR},
      nonce = #{nonce,jdbcType=BIGINT},
      t_value = #{tValue,jdbcType=VARCHAR},
      gas = #{gas,jdbcType=VARCHAR},
      gas_price = #{gasPrice,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      block_hash = #{blockHash,jdbcType=VARCHAR},
      block_number = #{blockNumber,jdbcType=BIGINT},
      transaction_index = #{transactionIndex,jdbcType=BIGINT},
      t_timestap = #{tTimestap,jdbcType=BIGINT},
      gas_used = #{gasUsed,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      t_input = #{tInput,jdbcType=LONGVARCHAR}
    where transaction_hash = #{transactionHash,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hpb.bc.entity.TransactionHistoryInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update transaction_history_info
    set from_account = #{fromAccount,jdbcType=VARCHAR},
      to_account = #{toAccount,jdbcType=VARCHAR},
      nonce = #{nonce,jdbcType=BIGINT},
      t_value = #{tValue,jdbcType=VARCHAR},
      gas = #{gas,jdbcType=VARCHAR},
      gas_price = #{gasPrice,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      block_hash = #{blockHash,jdbcType=VARCHAR},
      block_number = #{blockNumber,jdbcType=BIGINT},
      transaction_index = #{transactionIndex,jdbcType=BIGINT},
      t_timestap = #{tTimestap,jdbcType=BIGINT},
      gas_used = #{gasUsed,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where transaction_hash = #{transactionHash,jdbcType=VARCHAR}
  </update>
  <sql id="transactionHistoryInfo_Column_List">
    <!--
    	用户交易
    -->
       ti.hash AS transaction_hash,
       ti.from_account,
       ti.to_account,
       ti.t_value,
       ti.nonce,
       ti.gas,
       ti.gas_price,
       ti.block_hash,
       ti.t_value,
  <!-- ti.t_input,       
       ti.transaction_index, -->
       ti.block_hash,
       ti.block_number,
       tri.b_timestamp AS t_timestap,
       tri.status,
       tri.gas_used
  </sql>
  <select id="selectTransactionHistoryInfoByPage" parameterType="Map" resultMap="ResultMapWithBLOBs">
	    SELECT 
	           ti.hash AS transaction_hash,
		       ti.from_account,
		       ti.to_account,
		       ti.t_value,
		       ti.nonce,
		       ti.gas,
		       ti.gas_price,
		       ti.block_hash,
		       ti.t_value,
		       ti.block_hash,
		       ti.block_number
	 	FROM `trade_info` ti
	   <where>
	        <if test="txFrom != null and txFrom != ''">
	           ti.from_account = #{txFrom}
	        </if>
	         <if test="txTo != null and txTo != ''">
	           AND ti.to_account = #{txTo}
	        </if>
	    </where>
	    ORDER BY ti.block_number DESC,ti.nonce DESC
  </select>
  <!-- <select id="selectTransactionHistoryInfoByPage" parameterType="Map" resultMap="ResultMapWithBLOBs">
	    SELECT 
	        <include refid="transactionHistoryInfo_Column_List" />
	 	FROM `trade_info` ti LEFT JOIN `transaction_receipt_info` tri 
	 	ON ti.`hash`=tri.`transaction_hash`
	   <where>
	        <if test="txFrom != null and txFrom != ''">
	           ti.from_account = #{txFrom}
	        </if>
	         <if test="txTo != null and txTo != ''">
	           AND ti.to_account = #{txTo}
	        </if>
	    </where>
	    ORDER BY ti.trade_time DESC,tri.b_timestamp DESC,tri.block_number DESC,tri.transaction_index DESC
  </select> -->
  
  <select id="selectTransactionHistoryInfoByAll" parameterType="Map" resultMap="ResultMapWithBLOBs">
	    SELECT 
	       ti.hash AS transaction_hash,
	       ti.from_account,
	       ti.to_account,
	       ti.t_value,
	       ti.nonce,
	       ti.gas,
	       ti.gas_price,
	       ti.block_hash,
	       ti.t_value,
	       ti.block_hash,
	<!--   ti.t_input,       
	       ti.transaction_index, -->
	       ti.block_number
	 	FROM `trade_info` ti
	    WHERE ti.from_account = #{address} or ti.to_account = #{address} 
	    ORDER BY ti.block_number DESC,ti.nonce DESC
  </select>
  
  <select id="selectTransactionHistoryInfoByHash" parameterType="Map" resultMap="ResultMapWithBLOBs">
	    SELECT 
	       ti.hash AS transaction_hash,
	       ti.from_account,
	       ti.to_account,
	       ti.t_value,
	       ti.nonce,
	       ti.gas,
	       ti.gas_price,
	       ti.block_hash,
	       ti.t_value,
	       ti.block_hash,
<!-- 	   ti.t_input,       
	       ti.transaction_index, -->
	       ti.block_number
	 	FROM `trade_info` ti
	    WHERE ti.hash = #{hash} limit 1
  </select>
  
</mapper>