<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hpb.bc.website.mapper.RedPacketSendMapper">
  <resultMap id="BaseResultMap" type="com.hpb.bc.entity.RedPacketSend">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="red_packet_no" jdbcType="VARCHAR" property="redPacketNo" />
    <result column="token_id" jdbcType="BIGINT" property="tokenId" />
    <result column="token_value" jdbcType="VARCHAR" property="tokenValue" />
    <result column="from_addr" jdbcType="VARCHAR" property="fromAddr" />
    <result column="tx_hash" jdbcType="VARCHAR" property="txHash" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="is_used" jdbcType="CHAR" property="isUsed" />
    <result column="red_packet_type" jdbcType="CHAR" property="redPacketType" />
    <result column="max_flag" jdbcType="CHAR" property="maxFlag" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="title_en" jdbcType="VARCHAR" property="titleEn" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modify" jdbcType="TIMESTAMP" property="gmtModify" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, red_packet_no, token_id, token_value, from_addr, tx_hash, status, is_used, red_packet_type, 
    max_flag, title, title_en, gmt_create, gmt_modify
  </sql>
  <select id="selectByExample" parameterType="com.hpb.bc.example.RedPacketSendExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from red_packet_send
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from red_packet_send
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from red_packet_send
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hpb.bc.example.RedPacketSendExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from red_packet_send
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hpb.bc.entity.RedPacketSend">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into red_packet_send (red_packet_no, token_id,
      token_value, from_addr, tx_hash, 
      status, is_used, red_packet_type, 
      max_flag, title, title_en, 
      gmt_create, gmt_modify)
    values (#{redPacketNo,jdbcType=VARCHAR}, #{tokenId,jdbcType=BIGINT},
      #{tokenValue,jdbcType=VARCHAR}, #{fromAddr,jdbcType=VARCHAR}, #{txHash,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{isUsed,jdbcType=CHAR}, #{redPacketType,jdbcType=CHAR}, 
      #{maxFlag,jdbcType=CHAR}, #{title,jdbcType=VARCHAR}, #{titleEn,jdbcType=VARCHAR}, now(), now())
  </insert>
  <insert id="insertSelective" parameterType="com.hpb.bc.entity.RedPacketSend">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into red_packet_send
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="redPacketNo != null">
        red_packet_no,
      </if>
      <if test="tokenId != null">
        token_id,
      </if>
      <if test="tokenValue != null">
        token_value,
      </if>
      <if test="fromAddr != null">
        from_addr,
      </if>
      <if test="txHash != null">
        tx_hash,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isUsed != null">
        is_used,
      </if>
      <if test="redPacketType != null">
        red_packet_type,
      </if>
      <if test="maxFlag != null">
        max_flag,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="titleEn != null">
        title_en,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModify != null">
        gmt_modify,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="redPacketNo != null">
        #{redPacketNo,jdbcType=VARCHAR},
      </if>
      <if test="tokenId != null">
        #{tokenId,jdbcType=BIGINT},
      </if>
      <if test="tokenValue != null">
        #{tokenValue,jdbcType=VARCHAR},
      </if>
      <if test="fromAddr != null">
        #{fromAddr,jdbcType=VARCHAR},
      </if>
      <if test="txHash != null">
        #{txHash,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="isUsed != null">
        #{isUsed,jdbcType=CHAR},
      </if>
      <if test="redPacketType != null">
        #{redPacketType,jdbcType=CHAR},
      </if>
      <if test="maxFlag != null">
        #{maxFlag,jdbcType=CHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="titleEn != null">
        #{titleEn,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null">
        #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hpb.bc.example.RedPacketSendExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from red_packet_send
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update red_packet_send
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.redPacketNo != null">
        red_packet_no = #{record.redPacketNo,jdbcType=VARCHAR},
      </if>
      <if test="record.tokenId != null">
        token_id = #{record.tokenId,jdbcType=BIGINT},
      </if>
      <if test="record.tokenValue != null">
        token_value = #{record.tokenValue,jdbcType=VARCHAR},
      </if>
      <if test="record.fromAddr != null">
        from_addr = #{record.fromAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.txHash != null">
        tx_hash = #{record.txHash,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.isUsed != null">
        is_used = #{record.isUsed,jdbcType=CHAR},
      </if>
      <if test="record.redPacketType != null">
        red_packet_type = #{record.redPacketType,jdbcType=CHAR},
      </if>
      <if test="record.maxFlag != null">
        max_flag = #{record.maxFlag,jdbcType=CHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.titleEn != null">
        title_en = #{record.titleEn,jdbcType=VARCHAR},
      </if>
      gmt_modify = now()
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update red_packet_send
    set id = #{record.id,jdbcType=BIGINT},
      red_packet_no = #{record.redPacketNo,jdbcType=VARCHAR},
      token_id = #{record.tokenId,jdbcType=BIGINT},
      token_value = #{record.tokenValue,jdbcType=VARCHAR},
      from_addr = #{record.fromAddr,jdbcType=VARCHAR},
      tx_hash = #{record.txHash,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=CHAR},
      is_used = #{record.isUsed,jdbcType=CHAR},
      red_packet_type = #{record.redPacketType,jdbcType=CHAR},
      max_flag = #{record.maxFlag,jdbcType=CHAR},
      title = #{record.title,jdbcType=VARCHAR},
      title_en = #{record.titleEn,jdbcType=VARCHAR},gmt_modify = now()
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hpb.bc.entity.RedPacketSend">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update red_packet_send
    <set>
      <if test="redPacketNo != null">
        red_packet_no = #{redPacketNo,jdbcType=VARCHAR},
      </if>
      <if test="tokenId != null">
        token_id = #{tokenId,jdbcType=BIGINT},
      </if>
      <if test="tokenValue != null">
        token_value = #{tokenValue,jdbcType=VARCHAR},
      </if>
      <if test="fromAddr != null">
        from_addr = #{fromAddr,jdbcType=VARCHAR},
      </if>
      <if test="txHash != null">
        tx_hash = #{txHash,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="isUsed != null">
        is_used = #{isUsed,jdbcType=CHAR},
      </if>
      <if test="redPacketType != null">
        red_packet_type = #{redPacketType,jdbcType=CHAR},
      </if>
      <if test="maxFlag != null">
        max_flag = #{maxFlag,jdbcType=CHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="titleEn != null">
        title_en = #{titleEn,jdbcType=VARCHAR},
      </if>
      gmt_modify = now()
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hpb.bc.entity.RedPacketSend">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update red_packet_send
    set red_packet_no = #{redPacketNo,jdbcType=VARCHAR},
      token_id = #{tokenId,jdbcType=BIGINT},
      token_value = #{tokenValue,jdbcType=VARCHAR},
      from_addr = #{fromAddr,jdbcType=VARCHAR},
      tx_hash = #{txHash,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      is_used = #{isUsed,jdbcType=CHAR},
      red_packet_type = #{redPacketType,jdbcType=CHAR},
      max_flag = #{maxFlag,jdbcType=CHAR},
      title = #{title,jdbcType=VARCHAR},
      title_en = #{titleEn,jdbcType=VARCHAR},gmt_modify = now()
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insertBatch" parameterType="java.util.List" >
    insert into red_packet_send (red_packet_no, token_id,token_value,
    from_addr, tx_hash, status,
    is_used,title,title_en,red_packet_type,max_flag, gmt_create, gmt_modify
    )
    values
    <foreach collection="list" item="send" index="index" separator=",">
      (#{send.redPacketNo,jdbcType=BIGINT}, #{send.tokenId,jdbcType=BIGINT},#{send.tokenValue},
      #{send.fromAddr,jdbcType=VARCHAR}, #{send.txHash,jdbcType=VARCHAR}, #{send.status,jdbcType=CHAR},
      #{send.isUsed,jdbcType=CHAR},#{send.title,jdbcType=VARCHAR},#{send.titleEn,jdbcType=VARCHAR},#{send.redPacketType,jdbcType=CHAR},#{send.maxFlag,jdbcType=CHAR}, now(), now()
      )
    </foreach>
  </insert>
  <select id="selectTokenId" parameterType="java.util.Map" resultMap="BaseResultMap">
   SELECT * FROM red_packet_send  AS t1
        JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM red_packet_send where  red_packet_no =#{redPacketNo}  and is_used = #{isUsed})-(SELECT MIN(id) FROM red_packet_send  where red_packet_no =#{redPacketNo}  and is_used = #{isUsed}))+(SELECT MIN(id) FROM red_packet_send where red_packet_no =#{redPacketNo}  and is_used = #{isUsed})) AS id) AS t2
    WHERE t1.id >= t2.id
    ORDER BY t1.id LIMIT 1;
  </select>

  <select id="selectNotIntokenIds" parameterType="java.util.Map" resultMap="BaseResultMap">
    select *
    from red_packet_send
    where red_packet_no = #{redPacketNo} and is_used='0'
    <if test="tokenIds !=null">
      AND token_id  not IN
      <foreach collection="tokenIds" item="tokenId"  open="(" separator="," close=")">
        #{tokenId}
      </foreach>
    </if>
    limit 1
  </select>

  <select id="list" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from red_packet_send
    where red_packet_no = #{redPacketNo}
  </select>

  <select id="querySendWithtokenId" parameterType="java.util.Map" resultMap="BaseResultMap">
    select *
    from red_packet_send
    where red_packet_no = #{redPacketNo} and token_id=#{tokenId}
  </select>

  <update id="updateUsedWithRefund" parameterType="java.util.Map">
    update red_packet_send set
    is_used = #{isUsed},gmt_modify = now()
    where red_packet_no = #{redPacketNo} and token_id = #{tokenId} and from_addr = #{fromAddr}
  </update>


</mapper>