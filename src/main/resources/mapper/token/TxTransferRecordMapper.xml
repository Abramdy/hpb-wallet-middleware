<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hpb.bc.token.mapper.TxTransferRecordMapper">
    <resultMap id="BaseResultMap" type="com.hpb.bc.entity.TxTransferRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="tx_hash" jdbcType="VARCHAR" property="txHash"/>
        <result column="block_hash" jdbcType="VARCHAR" property="blockHash"/>
        <result column="block_number" jdbcType="BIGINT" property="blockNumber"/>
        <result column="block_timestamp" jdbcType="BIGINT" property="blockTimestamp"/>
        <result column="contract_address" jdbcType="VARCHAR" property="contractAddress"/>
        <result column="from_address" jdbcType="VARCHAR" property="fromAddress"/>
        <result column="to_address" jdbcType="VARCHAR" property="toAddress"/>
        <result column="quantity" jdbcType="VARCHAR" property="quantity"/>
        <result column="token_type" jdbcType="VARCHAR" property="tokenType"/>
        <result column="log_index" jdbcType="BIGINT" property="logIndex"/>
        <result column="token_id" jdbcType="BIGINT" property="tokenId"/>
        <result column="create_timestamp" jdbcType="TIMESTAMP" property="createTimestamp"/>
        <result column="update_timestamp" jdbcType="TIMESTAMP" property="updateTimestamp"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        tx_hash, block_hash, block_number, block_timestamp, contract_address, from_address,
        to_address, quantity, token_type, log_index, token_id, create_timestamp, update_timestamp
    </sql>
    <select id="selectByExample" parameterType="com.hpb.bc.example.TxTransferRecordExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tx_transfer_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="com.hpb.bc.example.TxTransferRecordExample">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from tx_transfer_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.hpb.bc.entity.TxTransferRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into tx_transfer_record (tx_hash, block_hash, block_number,
        block_timestamp, contract_address, from_address,
        to_address, quantity, token_type,
        log_index, token_id, create_timestamp,
        update_timestamp)
        values (#{txHash,jdbcType=VARCHAR}, #{blockHash,jdbcType=VARCHAR}, #{blockNumber,jdbcType=BIGINT},
        #{blockTimestamp,jdbcType=BIGINT}, #{contractAddress,jdbcType=VARCHAR}, #{fromAddress,jdbcType=VARCHAR},
        #{toAddress,jdbcType=VARCHAR}, #{quantity,jdbcType=VARCHAR}, #{tokenType,jdbcType=VARCHAR},
        #{logIndex,jdbcType=BIGINT}, #{tokenId,jdbcType=BIGINT}, #{createTimestamp,jdbcType=TIMESTAMP},
        #{updateTimestamp,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.hpb.bc.entity.TxTransferRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into tx_transfer_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="txHash != null">
                tx_hash,
            </if>
            <if test="blockHash != null">
                block_hash,
            </if>
            <if test="blockNumber != null">
                block_number,
            </if>
            <if test="blockTimestamp != null">
                block_timestamp,
            </if>
            <if test="contractAddress != null">
                contract_address,
            </if>
            <if test="fromAddress != null">
                from_address,
            </if>
            <if test="toAddress != null">
                to_address,
            </if>
            <if test="quantity != null">
                quantity,
            </if>
            <if test="tokenType != null">
                token_type,
            </if>
            <if test="logIndex != null">
                log_index,
            </if>
            <if test="tokenId != null">
                token_id,
            </if>
            <if test="createTimestamp != null">
                create_timestamp,
            </if>
            <if test="updateTimestamp != null">
                update_timestamp,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="txHash != null">
                #{txHash,jdbcType=VARCHAR},
            </if>
            <if test="blockHash != null">
                #{blockHash,jdbcType=VARCHAR},
            </if>
            <if test="blockNumber != null">
                #{blockNumber,jdbcType=BIGINT},
            </if>
            <if test="blockTimestamp != null">
                #{blockTimestamp,jdbcType=BIGINT},
            </if>
            <if test="contractAddress != null">
                #{contractAddress,jdbcType=VARCHAR},
            </if>
            <if test="fromAddress != null">
                #{fromAddress,jdbcType=VARCHAR},
            </if>
            <if test="toAddress != null">
                #{toAddress,jdbcType=VARCHAR},
            </if>
            <if test="quantity != null">
                #{quantity,jdbcType=VARCHAR},
            </if>
            <if test="tokenType != null">
                #{tokenType,jdbcType=VARCHAR},
            </if>
            <if test="logIndex != null">
                #{logIndex,jdbcType=BIGINT},
            </if>
            <if test="tokenId != null">
                #{tokenId,jdbcType=BIGINT},
            </if>
            <if test="createTimestamp != null">
                #{createTimestamp,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTimestamp != null">
                #{updateTimestamp,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.hpb.bc.example.TxTransferRecordExample" resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from tx_transfer_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update tx_transfer_record
        <set>
            <if test="record.txHash != null">
                tx_hash = #{record.txHash,jdbcType=VARCHAR},
            </if>
            <if test="record.blockHash != null">
                block_hash = #{record.blockHash,jdbcType=VARCHAR},
            </if>
            <if test="record.blockNumber != null">
                block_number = #{record.blockNumber,jdbcType=BIGINT},
            </if>
            <if test="record.blockTimestamp != null">
                block_timestamp = #{record.blockTimestamp,jdbcType=BIGINT},
            </if>
            <if test="record.contractAddress != null">
                contract_address = #{record.contractAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.fromAddress != null">
                from_address = #{record.fromAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.toAddress != null">
                to_address = #{record.toAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.quantity != null">
                quantity = #{record.quantity,jdbcType=VARCHAR},
            </if>
            <if test="record.tokenType != null">
                token_type = #{record.tokenType,jdbcType=VARCHAR},
            </if>
            <if test="record.logIndex != null">
                log_index = #{record.logIndex,jdbcType=BIGINT},
            </if>
            <if test="record.tokenId != null">
                token_id = #{record.tokenId,jdbcType=BIGINT},
            </if>
            <if test="record.createTimestamp != null">
                create_timestamp = #{record.createTimestamp,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTimestamp != null">
                update_timestamp = #{record.updateTimestamp,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update tx_transfer_record
        set tx_hash = #{record.txHash,jdbcType=VARCHAR},
        block_hash = #{record.blockHash,jdbcType=VARCHAR},
        block_number = #{record.blockNumber,jdbcType=BIGINT},
        block_timestamp = #{record.blockTimestamp,jdbcType=BIGINT},
        contract_address = #{record.contractAddress,jdbcType=VARCHAR},
        from_address = #{record.fromAddress,jdbcType=VARCHAR},
        to_address = #{record.toAddress,jdbcType=VARCHAR},
        quantity = #{record.quantity,jdbcType=VARCHAR},
        token_type = #{record.tokenType,jdbcType=VARCHAR},
        log_index = #{record.logIndex,jdbcType=BIGINT},
        token_id = #{record.tokenId,jdbcType=BIGINT},
        create_timestamp = #{record.createTimestamp,jdbcType=TIMESTAMP},
        update_timestamp = #{record.updateTimestamp,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <select id="selectTxTransferRecordByAll" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT
    *
    FROM `tx_transfer_record`
    WHERE (from_address = #{address} or to_address = #{address}) and contract_address=#{contractAddress}
--     and token_type in ('ERC721','ERC20')
    ORDER BY block_number DESC
  </select>
    <select id="selectTxTransferRecordByAddress" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT
    tx_hash, block_hash, block_number,block_timestamp,contract_address,from_address,to_address,quantity,token_type,
    log_index,token_id,create_timestamp,update_timestamp
    FROM `tx_transfer_record`
    WHERE (from_address = #{address} or to_address = #{address} ) and contract_address=#{contractAddress}
--     and token_type in ('ERC721','ERC20')
    ORDER BY block_number DESC
  </select>

    <select id="selectWalletTransferBalance" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        tx_hash, block_hash, block_number,block_timestamp,contract_address,from_address,to_address,quantity,token_type,
        log_index,token_id,create_timestamp,update_timestamp
        FROM `tx_transfer_record`
        WHERE (from_address = #{address} or to_address = #{address} )
        ORDER BY block_number DESC
    </select>

    <select id="selectContractAddrsByAddr" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT
        DISTINCT contract_address
        FROM `tx_transfer_record`
        WHERE (from_address = #{address} or to_address = #{address} )
    </select>
</mapper>
